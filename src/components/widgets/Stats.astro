---
import type { Stats as Props } from '~/types';
import WidgetWrapper from '../ui/WidgetWrapper.astro';
import Headline from '../ui/Headline.astro';
import { Icon } from 'astro-icon/components';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,
  stats = [],
  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />
  <div class="flex flex-wrap justify-center -m-4 text-center">
    {
      stats &&
      stats.map(({ amount, title, icon }) => (
        <div class="p-6 md:w-1/4 sm:w-1/2 w-full min-w-[220px] text-center bg-white rounded-lg shadow-lg transition-transform transform hover:scale-105 dark:bg-gray-800 dark:text-white">
          {icon && (
            <div class="flex items-center justify-center mx-auto mb-4 text-primary">
              <Icon name={icon} class="w-10 h-10" />
            </div>
          )}
          {amount && (
            <div class="font-heading text-primary text-[2.6rem] font-bold dark:text-yellow-400 lg:text-5xl xl:text-6xl">
              <span class="font-bold text-red-600">{String(amount).split(' ')[0]}</span>
              <span>{String(amount).slice(String(amount).indexOf(' '))}</span>
            </div>
          )}
          {title && (
            <div class="text-sm font-medium uppercase tracking-widest text-gray-800 dark:text-slate-400 lg:text-base mt-2">
              {title}
            </div>
          )}
        </div>
      ))
    }
  </div>
</WidgetWrapper>
